// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`# Generator ## constructor ### should construct when mixed options present - design as argument 1`] = `
Generator {
  "_design": Object {
    "aa": "aa",
    "bb": "bb",
  },
  "_extensionBuilder": ExtensionBuilder {
    "_loadOneExtension": [MockFunction],
    "build": [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    },
    "getExtensions": [MockFunction],
    "toString": [MockFunction],
  },
  "_map": Object {
    "a": Object {
      "template": "a",
    },
    "b": Object {
      "template": "b",
    },
  },
  "_options": Object {
    "design": Array [],
    "generator": Array [],
    "map": Array [
      "a",
      "b",
    ],
    "swarm": true,
  },
  "_packages": Object {
    "lib": Object {
      "packageName": "@kurlytail/gen-lib",
      "version": "test",
    },
  },
}
`;

exports[`# Generator ## constructor ### should construct when mixed options present - map as argument 1`] = `
Generator {
  "_design": Object {
    "aa": "aa",
    "bb": "bb",
  },
  "_extensionBuilder": ExtensionBuilder {
    "_loadOneExtension": [MockFunction],
    "build": [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    },
    "getExtensions": [MockFunction],
    "toString": [MockFunction],
  },
  "_map": Object {
    "a": Object {
      "template": "a",
    },
    "b": Object {
      "template": "b",
    },
  },
  "_options": Object {
    "design": Array [
      "aa",
      "bb",
    ],
    "generator": Array [],
    "map": Array [],
    "swarm": true,
  },
  "_packages": Object {
    "lib": Object {
      "packageName": "@kurlytail/gen-lib",
      "version": "test",
    },
  },
}
`;

exports[`# Generator ## constructor ### should construct when mixed options present - template map as argument 1`] = `
Generator {
  "_design": Object {
    "bb": "bb",
    "cc": "dddd",
  },
  "_extensionBuilder": ExtensionBuilder {
    "_loadOneExtension": [MockFunction],
    "build": [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    },
    "getExtensions": [MockFunction],
    "toString": [MockFunction],
  },
  "_map": Object {
    "b": Object {
      "template": "b",
    },
    "dddd": Object {
      "template": "a",
    },
  },
  "_options": Object {
    "design": Array [
      "aa",
      "bb",
    ],
    "generator": Array [],
    "map": Array [
      "a",
      "b",
    ],
    "output": "output",
    "swarm": true,
  },
  "_packages": Object {
    "lib": Object {
      "packageName": "@kurlytail/gen-lib",
      "version": "test",
    },
  },
}
`;

exports[`# Generator ## constructor ### should construct when parsed options present 1`] = `
Generator {
  "_design": Object {
    "aa": "aa",
    "bb": "bb",
  },
  "_extensionBuilder": ExtensionBuilder {
    "_loadOneExtension": [MockFunction],
    "build": [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    },
    "getExtensions": [MockFunction],
    "toString": [MockFunction],
  },
  "_map": Object {
    "a": Object {
      "template": "a",
    },
    "b": Object {
      "template": "b",
    },
  },
  "_options": Object {
    "design": Array [
      "aa",
      "bb",
    ],
    "generator": Array [],
    "map": Array [
      "a",
      "b",
    ],
    "output": "output",
    "swarm": true,
  },
  "_packages": Object {
    "lib": Object {
      "packageName": "@kurlytail/gen-lib",
      "version": "test",
    },
  },
}
`;

exports[`# Generator ## constructor ### should throw an error when no design 1`] = `"No designs found"`;

exports[`# Generator ## constructor ### should throw an error when no design 2`] = `"No designs found"`;

exports[`# Generator ## constructor ### should throw an error when no map 1`] = `"No maps found"`;

exports[`# Generator ## constructor ### should throw an error when no map 2`] = `"No maps found"`;

exports[`# Generator ## constructor ### should throw an error when no map or no design 1`] = `"No maps found"`;
